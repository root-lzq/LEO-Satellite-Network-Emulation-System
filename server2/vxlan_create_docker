#!/usr/bin/python3.6

#创建800个docker
#docker name from b801 to b1600


import os


def name_id(number):
    #获取docker短id
    #【参数】number：int; docker序列号
    #【返回值】result : string ; docker短id

    import subprocess
    string = ' "name=^b' +str(number) + '$"'
    total_string = "docker ps -aqf{}".format(string)
    result=subprocess.getoutput(total_string)
    return result

def process(docker_id):
    #建立docker namespace
    #【参数】docker_id : string； docker短id
    #【返回值】result : int ; docker namespace pid

    import subprocess

    total_string = "docker inspect -f '{{ .State.Pid }}' "+docker_id

    result=subprocess.getoutput(total_string)

    return result

def produce_mac(i):
    #指定每个docker的ip，mac,并将其连接到ovs上
    #【参数】i: int ; docker序列号，eg: 1,2,……
    #【返回值】last : string; 将具有指定ip和mac地址的docker连接至ovs的语句

    array = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F']
    n = i
    if n >= 256:
        hundered = array[int(n/256)]
        n = n - 256 * (int(n/256))
    else:
        hundered = array[0]
    ten = array[int(n/16)]
    one = array[n%16]
    string = '"00:00:00:00:0'+hundered + ':' + ten + one +'"'
    last = ' /root/ovs-docker add-port br0 eth0 b'+str(i)+' --ipaddress=10.0.'+str(int(i/254))+'.'+str(i%254+1)+'/16 --gateway=10.0.0.1 --macaddress={}'.format(string)
    return last

def create_docker(n):
   #创建指定数量的docker
   #[参数】n: int； docker 个数

   for i in range(801,n+1):
       #os.system('docker run -idt --privileged=true --net=none --name=b'+str(i)+' -v /home/xidian1208/Desktop/Manet720:/root/Manet720 '+' centos_12_23')
       os.system('docker run -idt --privileged=true --net=none --name=b'+str(i)+' centos')


       docker_id=name_id(i)

       pid=process(docker_id)

       namespace='ln -s /proc/'+str(pid)+'/ns/net /run/netns/'+docker_id

       os.system(namespace)
       os.system(produce_mac(i))
       #os.system(' /root/ovs-docker add-port br0 eth0 b'+str(i)+' --ipaddress=10.0.'+str(int(i/254))+'.'+str(i%254+3)+'/16 --gateway=10.0.0.100')
       #os.system(' /root/ovs-docker add-port br0 eth0 b'+str(i)+' --ipaddress=10.0.'+str(int(i/254))+'.'+str(i%254+1)+'/16 --gateway=10.0.0.1')  #attention path
       #os.system(' /root/ovs-docker add-port br0 eth0 b'+str(i)+' --ipaddress=10.0.'+str(int(i/254))+'.'+str(i%254+1)+'/24') 
       #os.system(' /root/ovs-docker add-port br0 eth0 b'+str(i)+' --ipaddress=172.0.'+str(int(i/254))+'.'+str(i%254+1)+'/24 --gateway=172.168.'+str(int(i/254))+'.'+str(i%254+1)) 
   os.system('ip addr add 10.0.0.1/16 dev br0')


def stop_rm (n):
    #停止并删除指定数量的docker [800,n]
    #【参数】n: int; docker个数

    for i in range(800,n+1):

        name="docker stop b"+str(i)

        os.system(name)

    for i in range(800,n+1):

        name = "docker rm b" + str(i)

        os.system(name)

#print("start")
  
os.system('ip -all netns del') #清除ip netns

#stop_rm(1600)
os.system("docker kill $(docker ps -q)")
os.system("docker rm $(docker ps -a -q)")

os.system('ovs-vsctl del-br br0')
os.system('ovs-vsctl add-br br0')
os.system('ip link set br0 up')
#print("stop")


if os.path.exists('/run/netns')==False:

    os.system('mkdir /run/netns') 

create_docker(1600)

