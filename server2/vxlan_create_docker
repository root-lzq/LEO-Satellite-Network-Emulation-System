#!/usr/bin/python3.6

#创建n个docker
#docker name from b(n+1) to b(2*n)

import os


def produce_mac(i):
    #指定每个docker的ip，mac,并将其连接到ovs上
    #【参数】i: int ; docker序列号，eg: 1,2,……
    #【返回值】last : string; 将具有指定ip和mac地址的docker连接至ovs的语句

    array = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F']
    n = i
    if n >= 256:
        hundered = array[int(n/256)]
        n = n - 256 * (int(n/256))
    else:
        hundered = array[0]
    ten = array[int(n/16)]
    one = array[n%16]
    string = '"00:00:00:00:0'+hundered + ':' + ten + one +'"'
    last = ' /root/ovs-docker add-port br0 eth0 b'+str(i)+' --ipaddress=10.0.'+str(int(i/254))+'.'+str(i%254+1)+'/16 --gateway=10.0.0.1 --macaddress={}'.format(string)
    return last

def create_docker(n):
   #创建指定数量的docker
   #[参数】n: int； docker 个数
   #if os.path.exists('./mapping') == True:
   #    os.system('rm -rf mapping')

   #path = '/root/LEO-Satellite-Network-Emulation-System/server2/mapping:/mapping'

   for i in range(n+1, 2*n+1):
       #os.system('docker run -idt --privileged=true --net=none --name=b'+str(i)+' -v /home/xidian1208/Desktop/Manet720:/root/Manet720 '+' centos_12_23')
       path = '/root/LEO-Satellite-Network-Emulation-System/server2/mapping/b'+str(i)+':/bdl_file'
       os.system('docker run -idt --privileged=true --net=none --name=b'+str(i)+' -v '+path+'  centos_tc')#建立容器共享文件夹mapping，并将其映射到每个docker内部

       os.system(produce_mac(i))
   os.system('ip addr add 10.0.0.1/16 dev br0')

os.system('docker run -idt --name=test_delete centos') #使得当前系统至少存在一个容器，避免docker kill && docker rm 报错
os.system("docker kill $(docker ps -q)")
os.system("docker rm $(docker ps -a -q)")

os.system('ovs-vsctl del-br br0')
os.system('ovs-vsctl add-br br0')
os.system('ip link set br0 up')

create_docker(400)

