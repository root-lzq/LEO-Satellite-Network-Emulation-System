#!/usr/bin/python3.6

#一次性将流表全配置

from datetime import datetime
import os
from multiprocessing import Process

def produce_mac(i):
    # 获取docker的mac地址
    #【参数】i : int; docker序列号
    #【返回值】string : string; docker的mac地址
    array = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F']
    if i >= 256:
        hundered = array[int(i/256)]
        i = i - 256 * (int(i/256))
    else:
        hundered = array[0]
    ten = array[int(i/16)]
    one = array[i%16]
    string = "00:00:00:00:0"+hundered + ":" + ten + one
    return string

def add_flow(list_link，n):
    #将所有的流表命令拼接完毕，并放入数组list_flow中。
    #【参数】list_link : string类型的数组，数组的每个元素是通断矩阵的每一行
    # 【参数】 n: docker个数
    # list_flow : string 类型的数组，数组的每个元素为一条流表。

     os.system('ovs-ofctl del-flows br0')
        
     # [1，n]-[1-n]的流表
     for i in range(n):
        z=''
        for j in range(0,2*n,2):
           if list_link[i][j]=='1':
               z=z+str(int(j/2)+1)+","
        z = z + str(n) + '1' # vxlan端口号为容器个数+1
        actions = str(i+1) + ",actions=output:" + z
        total_command = "in_port="+ actions
        list_flow.append(total_command)
     
     # [1,n]- [n+1, 2*n]的流表 
     for i in range(n, 2*n):
        z = ''
        for j in range(0, 2*n, 2):
            if list_link[i][j]=='1':
                z=z+str(int(j/2)+1)+","
        if len(z):
            string = produce_mac(i+1)
            actions = string + ",actions=output:" + z[:-1]
            total_command = "in_port=801,dl_src=" + actions
            list_flow.append(total_command)

if __name__ == '__main__':
    
    #获取当前时间
    dt=datetime.now()
    num=dt.hour*60+dt.minute

    while True:
         flag=num
         dt=datetime.now()
         num=dt.hour*60+dt.minute+1
         if flag==num:
             continue #一分钟内只设定一次流表格

         diff_1 = datetime.now() 
         configurate_time_start = diff_1.second #配置开始时间戳

         file_link = '/root/link_1600/'+str(num)+'.txt'
         list_link=[] # list_link : string类型的数组，数组的每个元素是通断矩阵的每一行
         list_flow=[] # list_flow : string 类型的数组，数组的每个元素为一条流表

         #读取文件
         with open(file_link, 'r+', encoding='utf-8') as file_obj:
             for content in file_obj:
                out_put = content.rstrip()
                if len(out_put):
                    list_link.append(out_put)
                    
         add_flow(list_link, 400);

         print(' start write file')
         
         #对flow_table进行写操作
         filename = "/root/LEO-Satellite-Network-Emulation-System/server1/flow_table"
         with open(filename, 'w+') as file_object:
             for i in range(len(list_flow)):
                 file_object.write(list_flow[i]+"\n")

         print(' finished write file')

         os.system('ovs-ofctl add-flows br0 flow_table')
         #os.system('ovs-ofctl dump-flows br0')
         
         diff_2 = datetime.now()
         configurate_time_end = diff_2.second #配置结束时间戳
         flag=num
         
         #打印信息
         print(' * Link on / off setting completed')
         print(' * The serial number of the currently read file is '+str(num))
         print(' * The configuration time is '+str(configurate_time_end-configurate_time_start)+'s')
         print(' Waitting for the next state transition ……………………………………………………………………………………')
         print(' ')
